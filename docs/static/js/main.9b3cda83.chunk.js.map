{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAG,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAOjB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCRHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEKG,MAAMR,GAFX,cAEbS,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAYZY,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAZAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIvB,CAACb,IAEIc,EDdwBK,CAAanB,GAAhCU,EAHuB,EAG5BJ,KAAaO,EAHe,EAGfA,QAEpB,OACI,qCACA,oBAAIjB,UAAU,qDAAd,SAAoEI,IAEnEa,GAAW,2CAGZ,qBAAKjB,UAAU,WAAf,SAGQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEYlB2B,EA7BM,WAAK,MAGczC,mBAAS,CAAC,KAHxB,mBAGf0C,EAHe,KAGH3C,EAHG,KAStB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ2C,EAAWb,KAAK,SAACR,GAAD,OACX,cAAC,EAAD,CAEGA,SAAUA,GADLA,Y,MCjBjCsB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9b3cda83.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = e =>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n            setcategories( cat =>[inputValue, ...cat])\r\n           setinputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}/> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setcategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}   \r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Wpr6BTCF3f7TP4wCQ15ITZgxv4eFLaOx`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__flash animate__delay-1s\">{category}</h3>\r\n\r\n        {loading && <p>Loading...</p>}\r\n\r\n\r\n        <div className=\"cardGrid\">\r\n            \r\n            {\r\n                images.map(img =>(\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n        \r\n    },[category])\r\n\r\n    return state; \r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', ' Hunter x Hunter'];\r\n    const [categories, setcategories] = useState([\"\"])\r\n\r\n   /*  const handleAdd = () =>{\r\n      setcategories([...categories, 'hola']);\r\n    }\r\n */\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories}/>\r\n\r\n            <hr/>\r\n        \r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                         <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//GifExpertApp\n\n\n"],"sourceRoot":""}